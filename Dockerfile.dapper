FROM registry.suse.com/bci/golang:1.17-11.51

ARG DAPPER_HOST_ARCH
ENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH}

RUN zypper -n install git vim less file curl wget tar gzip

ENV GOLANG_ARCH_s390x=s390x GOLANG_ARCH_amd64=amd64 GOLANG_ARCH_arm=armv6l GOLANG_ARCH_arm64=arm64 GOLANG_ARCH=GOLANG_ARCH_${ARCH} \
    GOPATH=/go PATH=/go/bin:/usr/local/go/bin:${PATH} SHELL=/bin/bash

RUN wget -O - https://storage.googleapis.com/golang/go1.14.9.linux-${!GOLANG_ARCH}.tar.gz | tar -xzf - -C /usr/local && \
    go get -u golang.org/x/lint/golint && \
    go get -d golang.org/x/tools/cmd/goimports && \
    # This needs to be kept up to date with rancher/types
    git -C /go/src/golang.org/x/tools/cmd/goimports checkout -b release-branch.go1.14 origin/release-branch.go1.14 && \
    go install golang.org/x/tools/cmd/goimports

ENV DOCKER_URL_amd64=https://get.docker.com/builds/Linux/x86_64/docker-1.10.3 \
    DOCKER_URL_arm=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm \
    DOCKER_URL_arm64=https://github.com/rancher/docker/releases/download/v1.10.3-ros1/docker-1.10.3_arm64 \
    DOCKER_URL=DOCKER_URL_${ARCH}

RUN if [ "${ARCH}" == "s390x" ]; then \
        curl -L https://download.docker.com/linux/static/stable/s390x/docker-18.06.3-ce.tgz | tar xzvf - && \
        cp docker/docker /usr/bin/ && \
        chmod +x /usr/bin/docker; \
    else \
        wget -O - ${!DOCKER_URL} > /usr/bin/docker && chmod +x /usr/bin/docker; \
    fi

ENV DAPPER_ENV REPO TAG DRONE_TAG
ENV DAPPER_SOURCE /go/src/github.com/rancher/telemetry/
ENV DAPPER_OUTPUT ./bin ./dist
ENV DAPPER_DOCKER_SOCKET true
ENV HOME ${DAPPER_SOURCE}
ENV GOPATH /go

# Fix error - exec: "s390x-linux-gnu-gcc": executable file not found in $PATH
ENV CC gcc

WORKDIR ${DAPPER_SOURCE}

ENTRYPOINT ["./scripts/entry"]
CMD ["ci"]
